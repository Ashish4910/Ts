what is foreign key 
what is string 
what is array 
what is different between array and arraylist
what is hashmap
what is hashtree
what is list , and linklist
what is exception


==> What is SQL ?
==> SQL is a Structure Query language 
==> SQL is standard Language for dealing with Relational Database which can be used to create , read ,update ,and Delete database records


===> What is database ?
1. Database is a systematic collection of data which support storage and manuipulation of data in easy way
2. Advantage of database 
                1.Managing large amoubnt of data
                2.Accuracy
                3.Ease of Data Upload
                4.Data security
                5.Data Integrity

==> What is DBMS ?
1. DBMS stand for Database management system 
2. DBMS is a system software responsible for creation , retrieval , update and management of database .
3. DBMS ensures that our data is consistent, organized, and is easily accessible by serving as an interface between the database and its 
   end-users or application software

===> What is RDBMS? How is it different from DBMS?
1.RDBMS stands for Relational Database Management System.
2. The key difference here, compared to DBMS, is that RDBMS stores data in the form of a collection of tables, and relations can be defined between the common fields of these tables.
3. Most modern database management systems like MySQL, Microsoft SQL Server, Oracle, IBM DB2, and Amazon Redshift are based on RDBMS.

==> What is the difference between SQL and MySQL?
1. SQL is a standard language for retrieving and manipulating structured databases.
2. On the contrary, MySQL is a relational database management system, like SQL Server, Oracle or IBM DB2, that is used to manage SQL databases.

==> What are Tables and Fields?
1.A table is an organized collection of data stored in the form of rows and columns.
2. Columns can be categorized as vertical and rows as horizontal.
3. The columns in a table are called fields while the rows can be referred to as records.

==>  What are Constraints in SQL?
1. SQL constraints are used to specify rules for the data in a table.
2. Constraints are used to limit the type of data that can go into a table.
3.This ensures the accuracy and reliability of the data in the table.
4.If there is any violation between the constraint and the data action, the action is aborted.

Type of Constraints ==> 

1. NOT NULL - Restricts NULL value from being inserted into a column.
2. CHECK - Verifies that all values in a field satisfy a condition.
3. DEFAULT - Automatically assigns a default value if no value has been specified for the field.
4. UNIQUE - Ensures unique values to be inserted into the field.
5. INDEX - Indexes a field providing faster retrieval of records.
6. PRIMARY KEY - Uniquely identifies each record in a table.
7. FOREIGN KEY - Ensures referential integrity for a record in another table.

==>  What is a Primary Key?
The PRIMARY KEY constraint uniquely identifies each row in a table. It must contain UNIQUE values and has an implicit NOT NULL constraint.
A table in SQL is strictly restricted to have one and only one primary key, which is comprised of single or multiple fields (columns).

CREATE TABLE Students (   /* Create table with a single field as primary key */
   ID INT NOT NULL
   Name VARCHAR(255)
   PRIMARY KEY (ID)
);

CREATE TABLE Students (   /* Create table with multiple fields as primary key */
   ID INT NOT NULL
   LastName VARCHAR(255)
   FirstName VARCHAR(255) NOT NULL,
   CONSTRAINT PK_Student
   PRIMARY KEY (ID, FirstName)
);

ALTER TABLE Students   /* Set a column as primary key */
ADD PRIMARY KEY (ID);
ALTER TABLE Students   /* Set multiple columns as primary key */
ADD CONSTRAINT PK_Student   /*Naming a Primary Key*/
PRIMARY KEY (ID, FirstName);

==> What is a UNIQUE constraint?
A UNIQUE constraint ensures that all values in a column are different. This provides uniqueness for the column(s) and helps identify each row uniquely. Unlike primary key, there can be multiple unique constraints defined per table. The code syntax for UNIQUE is quite similar to that of PRIMARY KEY and can be used interchangeably.

CREATE TABLE Students (   /* Create table with a single field as unique */
   ID INT NOT NULL UNIQUE
   Name VARCHAR(255)
);

CREATE TABLE Students (   /* Create table with multiple fields as unique */
   ID INT NOT NULL
   LastName VARCHAR(255)
   FirstName VARCHAR(255) NOT NULL
   CONSTRAINT PK_Student
   UNIQUE (ID, FirstName)
);

ALTER TABLE Students   /* Set a column as unique */
ADD UNIQUE (ID);
ALTER TABLE Students   /* Set multiple columns as unique */
ADD CONSTRAINT PK_Student   /* Naming a unique constraint */
UNIQUE (ID, FirstName);


==>  What is a Foreign Key?
A FOREIGN KEY comprises of single or collection of fields in a table that essentially refers to the PRIMARY KEY in another table. Foreign key constraint ensures referential integrity in the relation between two tables.
The table with the foreign key constraint is labeled as the child table, and the table containing the candidate key is labeled as the referenced or parent table.

CREATE TABLE Students (   /* Create table with foreign key - Way 1 */
   ID INT NOT NULL
   Name VARCHAR(255)
   LibraryID INT
   PRIMARY KEY (ID)
   FOREIGN KEY (Library_ID) REFERENCES Library(LibraryID)
);

CREATE TABLE Students (   /* Create table with foreign key - Way 2 */
   ID INT NOT NULL PRIMARY KEY
   Name VARCHAR(255)
   LibraryID INT FOREIGN KEY (Library_ID) REFERENCES Library(LibraryID)
);

ALTER TABLE Students   /* Add a new foreign key */
ADD FOREIGN KEY (LibraryID)
REFERENCES Library (LibraryID);

==================Joins ========================

==> What is joins ? 
1. SQL joins statement is used to combine rows of data from two aur more table based on a common column(Field) between them .

==> What is Inner Joins ?
1. SQl Inner joins statement return all the row from multiple table as long as condition are met 

Select * from 
Table_A 
Inner join  Tabel_B;

or 

Select * From 
Table_A 
join Table_B ;

==> What is Left Joins ?
1. SQL Left Joins statemnt return all the recored(row) from left table and matching rows from right table.

Select * form
Table_A 
left join Table_B
on Table_A.id = Table_B.id;

==> What is Right Joins ?
1. SQL Right Joins statement return all the record (row) from Right Table and matching record form left table .

Select * from 
Table a 
right join 
table b 
on a.id = b.id;





